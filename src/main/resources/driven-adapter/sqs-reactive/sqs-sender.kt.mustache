package {{package}}.sqs.sender;

import {{package}}.sqs.sender.config.SQSSenderProperties;
import org.springframework.stereotype.Service;
import reactor.core.publisher.Mono;
import software.amazon.awssdk.services.sqs.SqsAsyncClient;
import software.amazon.awssdk.services.sqs.model.SendMessageRequest;
import software.amazon.awssdk.services.sqs.model.SendMessageResponse;

@Service
class SQSSender /*implements SomeGateway*/ (val client: SqsAsyncClient, val properties: SQSSenderProperties){

    fun send(message: String): Mono<String>{
        return Mono.fromCallable(() -> buildRequest(message))
            .flatMap(request -> Mono.fromFuture(client.sendMessage(request)))
            .map(SendMessageResponse::messageId);
        }

    fun  buildRequest(String message): SendMessageRequest {
        return SendMessageRequest.builder()
            .queueUrl(properties.getQueueUrl())
            .messageBody(message)
            .build();
    }
    }