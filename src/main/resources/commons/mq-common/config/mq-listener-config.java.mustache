package {{package}}.mq.common.config;

{{#lombok}}
import lombok.Builder;
import lombok.Getter;

@Builder
@Getter
{{/lombok}}
public class MQListenerConfig {
    private final String queue;
    private final int concurrency;
    private final String connectionFactory;
    private final String tempQueueAlias;
    private final boolean async;
    private final boolean mqmd;
    {{^lombok}}

    MQListenerConfig(final String queue, final int concurrency, final String connectionFactory, final String tempQueueAlias, final boolean async, final boolean mqmd) {
        this.queue = queue;
        this.concurrency = concurrency;
        this.connectionFactory = connectionFactory;
        this.tempQueueAlias = tempQueueAlias;
        this.async = async;
        this.mqmd = mqmd;
    }

    public static class MQListenerConfigBuilder {
        private String queue;
        private int concurrency;
        private String connectionFactory;
        private String tempQueueAlias;
        private boolean async;
        private boolean mqmd;

        MQListenerConfigBuilder() {
        }

        public MQListenerConfig.MQListenerConfigBuilder queue(final String queue) {
            this.queue = queue;
            return this;
        }

        public MQListenerConfig.MQListenerConfigBuilder concurrency(final int concurrency) {
            this.concurrency = concurrency;
            return this;
        }

        public MQListenerConfig.MQListenerConfigBuilder connectionFactory(final String connectionFactory) {
            this.connectionFactory = connectionFactory;
            return this;
        }

        public MQListenerConfig.MQListenerConfigBuilder tempQueueAlias(final String tempQueueAlias) {
            this.tempQueueAlias = tempQueueAlias;
            return this;
        }

        public MQListenerConfig.MQListenerConfigBuilder async(final boolean async) {
            this.async = async;
            return this;
        }

        public MQListenerConfig.MQListenerConfigBuilder mqmd(final boolean mqmd) {
            this.mqmd = mqmd;
            return this;
        }

        public MQListenerConfig build() {
            return new MQListenerConfig(this.queue, this.concurrency, this.connectionFactory, this.tempQueueAlias, this.async, this.mqmd);
        }

        @Override
        public String toString() {
            return "MQListenerConfig.MQListenerConfigBuilder(queue=" + this.queue + ", concurrency=" + this.concurrency + ", connectionFactory=" + this.connectionFactory + ", tempQueueAlias=" + this.tempQueueAlias + ", async=" + this.async + ", mqmd=" + this.mqmd + ")";
        }
    }

    public static MQListenerConfig.MQListenerConfigBuilder builder() {
        return new MQListenerConfig.MQListenerConfigBuilder();
    }

    public String getQueue() {
        return this.queue;
    }

    public int getConcurrency() {
        return this.concurrency;
    }

    public String getConnectionFactory() {
        return this.connectionFactory;
    }

    public String getTempQueueAlias() {
        return this.tempQueueAlias;
    }

    public boolean isAsync() {
        return this.async;
    }

    public boolean isMqmd() {
        return this.mqmd;
    }
    {{/lombok}}
}
