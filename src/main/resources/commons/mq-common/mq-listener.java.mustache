package {{package}}.mq.common;

import java.lang.annotation.*;

@Target({ElementType.METHOD, ElementType.ANNOTATION_TYPE})
@Retention(RetentionPolicy.RUNTIME)
@Documented
@Repeatable(MQListeners.class)
public @interface MQListener {

    /**
     * Queue for listening
     *
     * @return Queue Name
     */
    String value() default "";

    /**
     * @return Amount of connections to mq
     */
    String concurrency() default "1";

    /**
     * Connection Factory for listening context
     *
     * @return bean name
     * @default empty and uses available ConnectionFactory.class bean
     */
    String connectionFactory() default "";

    /**
     * Alias to register a temporary queue in the MQContainer bean
     *
     * @return temporary queue alias
     * @default empty and uses value() for listen a fixed queue
     */
    String tempQueueAlias() default "";

    /**
     * Enables WMQ_PUT_ASYNC_ALLOWED_ENABLED and WMQ_READ_AHEAD_ALLOWED_ENABLED
     *
     * @return async enabled
     */
    boolean async() default true;

    /**
     * Enables WMQ_MQMD_READ_ENABLED and WMQ_MQMD_WRITE_ENABLED
     *
     * @return mqmd enabled
     */
    boolean mqmd() default true;
}
