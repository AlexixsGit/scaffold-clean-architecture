package {{package}}.mq.common.connection;

{{#lombok}}
import lombok.AllArgsConstructor;
import lombok.Builder;
{{/lombok}}

import javax.jms.*;

{{#lombok}}
@Builder
@AllArgsConstructor
{{/lombok}}
public class MQConnectionListener implements Runnable {
    private final Session session;
    private final TemporaryQueue destination;
    private final MessageListener listener;

    @Override
    public void run() {
        try {
            session.createConsumer(destination)//NOSONAR
                    .setMessageListener(listener);
        } catch (JMSException ex) {
            throw new JMSRuntimeException(ex.getMessage(), ex.getErrorCode(), ex);
        }
    }
    {{^lombok}}

    public static class MQConnectionListenerBuilder {
        private Session session;
        private TemporaryQueue destination;
        private MessageListener listener;

        MQConnectionListenerBuilder() {
        }

        public MQConnectionListener.MQConnectionListenerBuilder session(final Session session) {
            this.session = session;
            return this;
        }

        public MQConnectionListener.MQConnectionListenerBuilder destination(final TemporaryQueue destination) {
            this.destination = destination;
            return this;
        }

        public MQConnectionListener.MQConnectionListenerBuilder listener(final MessageListener listener) {
            this.listener = listener;
            return this;
        }

        public MQConnectionListener build() {
            return new MQConnectionListener(this.session, this.destination, this.listener);
        }

        @Override
        public String toString() {
            return "MQConnectionListener.MQConnectionListenerBuilder(session=" + this.session + ", destination=" + this.destination + ", listener=" + this.listener + ")";
        }
    }

    public static MQConnectionListener.MQConnectionListenerBuilder builder() {
        return new MQConnectionListener.MQConnectionListenerBuilder();
    }

    public MQConnectionListener(final Session session, final TemporaryQueue destination, final MessageListener listener) {
        this.session = session;
        this.destination = destination;
        this.listener = listener;
    }
    {{/lombok}}

}
